---
- name: Install NVM e Node
  hosts: group_01
  vars:
    version_nvm: "v0.7.0"
    version_node: "v14.21.3"    
  tasks:
    - name: Install NVM
      shell: >
        curl https://raw.githubusercontent.com/creationix/nvm/{{version_nvm}}/install.sh | sh
        creates=/root/.nvm/nvm.sh        

    - name: Install node 
      shell: >
        /bin/bash -c "source ~/.nvm/nvm.sh && nvm install {{version_node}}"

- name: Install aptitude
  hosts: group_02
  vars:
    git_repository: "https://github.com/fabiocaettano/nestjs-002-smartranking-microservices.git"    
  tasks:    
    - name: Install aptitude
      apt:
        name: aptitude
        state: latest
        update_cache: true

    - name: Install required system packages
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
        state: latest
        update_cache: true

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Update apt and install docker-ce
      apt:
        name: docker-ce
        state: latest
        update_cache: true

    - name: Install Docker Module for Python
      pip:
        name: docker
    
    - name: Install Docker Compose
      get_url:
        url: https://github.com/docker/compose/releases/download/1.29.2/docker-compose-Linux-x86_64
        dest: /usr/local/bin/docker-compose
        mode: u+x,g+x,o+x
    
    - name: Git Clone
      shell: >
        git clone {{git_repository}}

- name: Running RabbitMQ
  hosts: group_03  
  vars:    
    folder: "nestjs-002-smartranking-microservices"
    branch: "rabbitmq"    
  tasks:
    - name: "Run RabbitMq"
      shell: |
        cd {{folder}}        
        git checkout -b {{branch}} remotes/origin/{{branch}}
        cd {{branch}}
        docker-compose up -d --build

- name: Running Api Gateway
  hosts: group_04
  vars:    
    folder: "nestjs-002-smartranking-microservices"    
    branch: "api-gateway"    
  tasks:    
    - name: Run Api Gateway
      shell: |                       
        cd {{folder}}        
        git checkout -b {{branch}} remotes/origin/{{branch}}        
        cd {{branch}}
        touch .env

- name: Running Micro Admin Backend
  hosts: group_05
  vars:    
    folder: "nestjs-002-smartranking-microservices"    
    branch: "micro-admin-backend"    
  tasks:    
    - name: Run Api Gateway
      shell: |                       
        cd {{folder}}        
        git checkout -b {{branch}} remotes/origin/{{branch}}        
        cd {{branch}}
        touch .env          