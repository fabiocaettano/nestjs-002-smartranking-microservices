---
- name: Install Node e NestJs
  hosts: group_01
  gather_facts: False
  tasks:
    - name: Node v14.x
      shell: >       
         curl -fsSL https://deb.nodesource.com/setup_14.x | sudo -E bash - && sudo apt-get install -y nodejs       
    - name: NestJs
      npm:
        name: "@nestjs/cli"
        global: yes

- name: Install aptitude, Docker e Docker-Compose
  hosts: group_02
  gather_facts: False
  tasks:    
    - name: Install aptitude
      apt:
        name: aptitude
        state: latest
        update_cache: true

    - name: Install required system packages
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
        state: latest
        update_cache: true

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Update apt and install docker-ce
      apt:
        name: docker-ce
        state: latest
        update_cache: true

    - name: Install Docker Module for Python
      pip:
        name: docker
    
    - name: Install Docker Compose
      get_url:
        url: https://github.com/docker/compose/releases/download/1.29.2/docker-compose-Linux-x86_64
        dest: /usr/local/bin/docker-compose
        mode: u+x,g+x,o+x

- name: Git Clone
  hosts: group_02    
  gather_facts: False  
  vars:
    git_repository: https://github.com/fabiocaettano/nestjs-002-smartranking-microservices.git    
    folder: ~/nestjs-002-smartranking-microservices
  tasks:
    - name: Git Clone
      become: yes
      shell: |
        if( ! [ -d {{folder}} ]);
        then
          git clone {{git_repository}}
        fi;

- name: Runnig RabbitMq        
  hosts: group_03  
  gather_facts: False
  tasks:
    - name: Realizar checkout em rabbitmq
      shell: |
        cd {{folder}}        
        git checkout -b {{branch}} remotes/origin/{{branch}}

    - name: "Executar container"
      become: true
      shell: |
        cd ~/{{folder}}/{{branch}}      
        docker-compose up -d --build

- name: Api Gateway
  hosts: group_04  
  tasks:    
    - name: Realizar Checkout na branch api-gateway
      become: true
      shell: |                       
        cd {{folder}}        
        git checkout -b {{branch}} remotes/origin/{{branch}}        

    - name: Variaveis de ambiente Api Gateway
      become: true
      shell: |                       
        cd ~/{{folder}}/{{branch}}        
        touch .env
        echo "RABBITMQ_URI=amqp://"{{rabbitmq_user}}":"{{rabbitmq_password}}"@"{{rabbitmq_ip}}":"{{rabbitmq_port}}"/"{{rabbitmq_virtual_host}} > .env
        echo "AWS_ENDPOINT="{{AWS_ENDPOINT}} >> .env
        echo "AWS_URL="{{AWS_URL}} >> .env
        echo "AWS_BUCKET="{{AWS_BUCKET}} >> .env
        echo "AWS_REGION="{{AWS_REGION}} >> .env
        echo "AWS_SPACES_KEY"={{AWS_SPACES_KEY}} >> .env
        echo "AWS_SPACES_SECRET="{{AWS_SPACES_SECRET}} >> .env

    - name: Instalar dependências do projeto
      become: true
      shell: |
        cd ~/{{folder}}/{{branch}}    
        npm install

- name: Running Micro Admin Backend
  hosts: group_05
  gather_facts: False
  tasks:    
    - name: Realizar Checkout em micro-admin-backend
      become: true
      shell: |                       
        cd {{folder}}        
        git checkout -b {{branch}} remotes/origin/{{branch}}        
    
    - name: Variáveis de ambiente 
      become: true
      shell: |    
        cd ~/{{folder}}/{{branch}}        
        touch .env          
        echo "RABBITMQ_URI=amqp://"{{rabbitmq_user}}":"{{rabbitmq_password}}"@"{{rabbitmq_ip}}":"{{rabbitmq_port}}"/"{{rabbitmq_virtual_host}} > .env
        echo "MONGO_URI=mongodb://"{{mongodb_ip}}":"{{mongodb_port}}"/"{{mongodb_db_name}} >> .env
        echo "MONGO_USER="{{mongodb_user}} >> .env
        echo "MONGO_PASSWORD="{{mongodb_password}} >> .env

    - name: Instalar dependências
      become: true
      shell: |
        cd ~/{{folder}}/{{branch}}      
        npm install   

    - name: "Executar container"
      become: true
      shell: |
        cd ~/{{folder}}/{{branch}}      
        docker-compose up -d --build

- name: Running Micro Desafios
  hosts: group_06
  gather_facts: False
  tasks:    
    - name: Realizar Checkout em micro-desafios
      become: true
      shell: |                       
        cd {{folder}}        
        git checkout -b {{branch}} remotes/origin/{{branch}}        
    
    - name: Variáveis de ambiente 
      become: true
      shell: |    
        cd ~/{{folder}}/{{branch}}        
        touch .env          
        echo "RABBITMQ_URI=amqp://"{{rabbitmq_user}}":"{{rabbitmq_password}}"@"{{rabbitmq_ip}}":"{{rabbitmq_port}}"/"{{rabbitmq_virtual_host}} > .env
        echo "MONGO_URI=mongodb://"{{mongodb_ip}}":"{{mongodb_port}}"/"{{mongodb_db_name}} >> .env
        echo "MONGO_USER="{{mongodb_user}} >> .env
        echo "MONGO_PASSWORD="{{mongodb_password}} >> .env

    - name: Instalar dependências
      become: true
      shell: |
        cd ~/{{folder}}/{{branch}}      
        npm install   

    - name: "Executar container"
      become: true
      shell: |
        cd ~/{{folder}}/{{branch}}      
        docker-compose up -d --build
